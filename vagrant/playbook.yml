# Useful resources:
# http://www.stavros.io/posts/example-provisioning-and-deployment-ansible/
# https://github.com/azavea/ansible-gdal-netcdf
# https://github.com/snowplow/ansible-playbooks (see python-data-science.yml)
---
- hosts: all
  remote_user: vagrant

  vars:
    sources_dir: /usr/local/src
    dev_sources_dir: /home/vagrant/python
    data_dir: /home/vagrant/data
    sentinel_file: S1A_IW_GRDH_1SDV_20141003T053708_20141003T053737_002661_002F66_A2F4.zip

  tasks:
    - name: Install required system packages.
      apt: pkg={{ item }} state=installed update-cache=yes
      sudo: yes
      with_items:
        - build-essential
        - unzip
        - git
        - libsqlite3-dev
        - sqlite3 # for the command line client
        - libspatialite-dev
        - spatialite-bin
        - g++
        - libx11-dev
        - libpng-dev
        - libjpeg-dev
        - libtiff5-dev
        - libgeotiff-dev
        - libnetcdf-dev
        - libproj-dev
        - libgeos-dev
        - libxml2-dev
        - libpq-dev
        - python-dev
        - python-setuptools
        - python-numpy
        - python-scipy
        - pkg-config
        - libfreetype6-dev
        - gdal-bin
        - python-gdal
        - libgdal-dev
        - python-pip

    - name: Install packages required for data science
      pip: name={{ item }}
      sudo: yes
      with_items:
        - ipython
        - pillow
        - netCDF
        - scikit-learn
        - pyzmq
        - jinja2
        - tornado
        - ipdb
        - nose
        - coverage
        - matplotlib
        - Django
        - django-forms-bootstrap
        - django-leaflet
        - jupyter

    - name: Symbolic link for libgeos
      file: src=/usr/lib/libgeos-3.4.2.so dest=/usr/lib/libgeos.so state=link
      sudo: yes

    - name: Install Basemap
      pip: name=basemap extra_args="--allow-external basemap --allow-unverified basemap"
      sudo: yes
      environment:
        GEOS_DIR: "/usr"

    - name: Update/checkout Nansat
      git: repo=https://github.com/nansencenter/nansat
           dest="{{ dev_sources_dir }}/nansat/"
           version=develop
           update=yes

    - name: Install Nansat
      shell: 'python setup.py install'
      sudo: yes
      args:
        chdir: '{{ dev_sources_dir }}/nansat'
        creates: '/usr/local/lib/python2.7/dist-packages/nansat-0.7_dev.0-py2.7-linux-x86_64.egg'

    - name: Update/checkout OpenWind
      git: repo=https://github.com/nansencenter/openwind
           dest="{{ dev_sources_dir }}/openwind"
           version=develop
           update=yes

    - name: Install OpenWind
      shell: 'python setup.py install'
      sudo: yes
      args:
        chdir: '{{ dev_sources_dir }}/openwind'
        creates: '/usr/local/lib/python2.7/dist-packages/openwind-0.7_dev.0-py2.7.egg'

    - name: Create data folder
      file: path="{{ data_dir }}" state=directory

    - name: Download Sentinel-1 sample acquisition
      get_url:
        url: "ftp://ftp.nersc.no/pub/python_test_data/sentinel1a/{{ sentinel_file }}"
        dest: "{{ data_dir }}/{{ sentinel_file }}"
        force: no

    - name: Add Ipython Notebook to crontab
      cron: name="Jupyter Notebook" special_time=reboot job=". /etc/environment; /usr/local/bin/jupyter notebook --ip=0.0.0.0 --no-browser --notebook-dir=/home/vagrant/notebooks"

    - name: Restart
      command: shutdown -r now "Ansible updates triggered"
      async: 0
      poll: 0
      ignore_errors: true
      sudo: true
